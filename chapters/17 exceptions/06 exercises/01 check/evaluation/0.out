100 / 100 = 1.0
100 / 101 = 0.9900990099009901
Error: it looks like the list contains a zero
Error: it looks like there is a non-numeric item
100 / 104 = 0.9615384615384616
Error: you should specify an index between -5 and 4
100 / 104 = 0.9615384615384616
Error: it looks like there is a non-numeric item
Error: it looks like the list contains a zero
100 / 101 = 0.9900990099009901
100 / 100 = 1.0
Error: you should specify an index between -5 and 4
Error: you did not enter an integer
----------------------------------------
tab name: Tests
python input without prompt: true
block count: multi
input block size: 1
output block size: 1
ignore fp rounding: -6
<LANGUAGE code="nl">
    <token from="Error" to="Fout" />
    <fixed from="it looks like the list contains a zero" to="het lijkt erop dat de list een 0 bevat" detect="false" />
    <fixed from="it looks like there is a non-numeric item" to="het lijkt erop er een niet-numeriek element is" detect="false" />
    <regex from="you should specify an index between (-?[1-9][0-9]*) and (-?[1-9][0-9]*)" to="de index moet tussen \1 en \2 liggen" detect="false" />
    <fixed from="you did not enter an integer" to="je gaf geen geheel getal" detect="false" />
</LANGUAGE>
<DEFINITION>
def customEvaluate(expected_output, generated_output):

    # check if there's  a single line of output
    if len(generated_output) != 1:
        return False

    # extract output lines
    expected_output = expected_output[0]
    generated_output = generated_output[0]

    # expected error message > check if also generated error message
    for prefix in ('Error', 'Fout'):
        prefix = f'{prefix}: '
        if expected_output.startswith(prefix):
            return generated_output.startswith(prefix)

    # check formatting of regular generated output
    import re
    exp = re.match('(-?[0-9]+ / -?[0-9]+) = ([0-9]*.[0-9]+|[0-9]+.[0-9]*)$', expected_output)
    gen = re.match('(-?[0-9]+ / -?[0-9]+) = ([0-9]*.[0-9]+|[0-9]+.[0-9]*)$', generated_output)
    if not exp or not gen:
        return False

    # check prefix and suffix of regular generated output
    return (
        gen[1] == exp[1] and                         # same prefix
        abs(float(gen[2]) - float(exp[2])) < 1e-6    # same suffix (float)
    )
</DEFINITION>